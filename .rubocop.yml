AllCops:
  Includes:
    - Capfile
    - Rakefile
    - Vagrantfile
    - config.ru
  Excludes:
    - db/**
    - lib/templates/active_record/migration/migration.rb
    - spec/**
    - vendor/**

# Align the elements of an array literal if they span more than one line.
AlignArray:
  Enabled: false

# Align the elements of a hash literal if they span more than one line.
AlignHash:
  Enabled: false

# Align the parameters of a method call if they span more than one line.
AlignParameters:
  Enabled: false

# Use UTF-8 as the source file encoding.
Encoding:
  Enabled: false

# Checks for usage of `extend self` in modules.
ModuleFunction:
  Enabled: false

# Checks if uses of quotes match the configured preference.
StringLiterals:
  Enabled: false


#
# Configurations generated by `rubocop --auto-gen-config`.
#

# Indent private/protected as deep as defs and keep blank lines around them.
AccessControl:
  Enabled: false

# Use alias_method instead of alias.
Alias:
  Enabled: false

# Use &&/|| instead of and/or.
AndOr:
  Enabled: false

# Don't use assignment in conditions."
AssignmentInCondition:
  Enabled: false

# Avoid classes longer than 100 lines of code.
ClassLength:
  Enabled: false

# Avoid the use of class variables.
ClassVars:
  Enabled: false

# Preferred collection methods.
CollectionMethods:
  Enabled: false

# Do not use :: for method call.
ColonMethodCall:
  Enabled: false

# Document classes and non-namespace modules.
Documentation:
  Enabled: false

# Checks the position of the dot in multi-line method calls.
DotPosition:
  Enabled: false

# Prefer literals to Array.new/Hash.new/String.new.
EmptyLiteral:
  Enabled: false

# Use sprintf instead of String#%.
FavorSprintf:
  Enabled: false

# Favor unless over if for negative conditions (or control flow or).
FavorUnlessOverNegatedIf:
  Enabled: false

# Do not introduce global variables.
GlobalVars:
  Enabled: false

# Don't suppress exception.
HandleExceptions:
  Enabled: false

# Checks for use of deprecated Hash methods.
HashMethods:
  Enabled: false

# Prefer Ruby 1.9 hash syntax { a: 1, b: 2 } over 1.8 syntax { :a => 1, :b => 2 }.
HashSyntax:
  Enabled: false

# Favor modifier if/unless usage when you have a single-line body.
IfUnlessModifier:
  Enabled: false

# Use the new lambda literal syntax for single-line blocks.
Lambda:
  Enabled: false

# Limit lines to 79 characters.
LineLength:
  Enabled: false

# Avoid methods longer than 10 lines of code.
MethodLength:
  Enabled: false

# Avoid multi-line chains of blocks.
MultilineBlockChain:
  Enabled: false

# Add underscores to large numeric literals to improve their readability.
NumericLiterals:
  Enabled: false

# When defining binary operators, name the argument other.
OpMethod:
  Enabled: false

# Avoid Perl-style regex back references.
PerlBackrefs:
  Enabled: false

# Checks the arguments passed to raise/fail.
RaiseArgs:
  Enabled: false

# Name reduce arguments |a, e| (accumulator, element)'
ReduceArguments:
  Enabled: false

# Don't use return where it's not required."
RedundantReturn:
  Enabled: false

# Don't use self where it's not needed.
RedundantSelf:
  Enabled: false

# Use %r for regular expressions matching more than `MaxSlashes` '/' characters. Use %r only for regular expressions matching more than `MaxSlashes` '/' character.
RegexpLiteral:
  Enabled: false

# Avoid rescuing the Exception class.
RescueException:
  Enabled: false

# Avoid using rescue in its modifier form.
RescueModifier:
  Enabled: false

# Checks for proper usage of fail and raise.
SignalException:
  Enabled: false

# Checks that block braces have or don't have surrounding space. For blocks taking parameters, checks that the left brace has or doesn't have trailing space.
SpaceAroundBlockBraces:
  Enabled: false

# Avoid Perl-style global variables.
SpecialGlobalVars:
  Enabled: false

# Symbol literals should use snake_case.
SymbolName:
  Enabled: false

# Prefer attr_* methods to trivial readers/writers.
TrivialAccessors:
  Enabled: false

# Checks for useless assignment to a local variable.
UselessAssignment:
  Enabled: false

# Use %w or %W for arrays of words.
WordArray:
  Enabled: false
